% main.m

clear; close all; clc;

% Add necessary paths
addpath('functions');

% Load experimental data
data = readtable('../data/Pump_Data.xlsx', 'Sheet', '15ms_Pump_Data');
pumpPowers_W = data.PumpPower_W_;
experimentalGain = data.Single_PassGain;

% Simulation parameters
endTime = 15e-3; % 15 ms

% Define initial constants
constants = struct(...
    'kcr', 6.85e-19, ...
    'ketu1', 2.1e-21, ...
    'ketu2', 2.1e-21, ...
    'tau2', 16.3e-3, ...
    'tau3', 2.258e-3, ...
    'tau4', 56.63e-6, ...
    'ndop', 8.3e20, ...
    'sigmaEmission', 4e-21, ...
    'sigmaAbsorption', 9e-22, ...
    'sigmaPumpAbs', 6.978e-21, ...
    'lambdaPump', 7.913e-5, ...
    'h', 6.626e-34, ...
    'c', 3e8, ...
    'beta43', 0.100, ...
    'beta42', 0.030, ...
    'beta32', 0.030, ...
    'L', 3.5 ...
);

% Simulate gains
simulatedGains = zeros(length(pumpPowers_W), 1);
for i = 1:length(pumpPowers_W)
    n_populations = simulateLaserDynamics(pumpPowers_W(i), endTime, constants);
    simulatedGains(i) = calculateGain(n_populations, constants);
end

% Plot results
figure;
plot(pumpPowers_W, simulatedGains, '-o', 'DisplayName', 'Simulated Gains');
hold on;
plot(pumpPowers_W, experimentalGain, '-x', 'DisplayName', 'Experimental Gains');
xlabel('Input Power (W)');
ylabel('Gain');
title('Comparison of Experimental and Simulated Gains');
legend('Location', 'Best');
grid on;
